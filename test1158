<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>

</body>
</html>

<script>
    // 문제 1158
    // 1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고,
    // 양의 정수 K(≤ N)가 주어진다. 이제 순서대로 K번째 사람을 제거한다.
    // 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 
    // 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다.

    // 1. n명 중 k번째를 배열에서 제거
    // 2. 기존 배열에서 k+1번째 사람부터 배열 재구성 >>> 기존배열에서 k전의 사람을 뒤로 옮기기(제거하고 뒤에 붙이기)
    // 3. 새로운 배열에서 n번째 제거-배열 재구성 반복

    let ManArray = []; // 사람들 배열
    let lastList= [];
    let DeleteArray = []; // 제거된 사람들
    let answerList = [];

    // fnAnswer(10, 4);
    fnAnswer(7, 3);

    function replaceArray(k){ 
        for(i=0; i<k-1; i++){
            ManArray.push(ManArray[0]); // 제거된 k 앞에 있던 사람들을 배열에 다시 푸쉬
            ManArray.splice(0,1); // 푸쉬한 사람들 순차적 제거
        }
        return array;
    }
    function fnAnswer(n,k){ // 요세푸스 순열을 구해주는 함수
        for(i=1; i<=n; i++){
            ManArray.push(i);
        }
        // console.log("CreateArray>>", ManArray) // 생성한 배열
        for(i=0; i<array.length; i++){
            deleteList.push(...ManArray.splice(k-1 ,1)); // k번째 사람 인덱스는 k-1
            this.replaceArray(k);
            if(ManArray.length<=k){
                for(i=0; i<k; i++){
                    lastList.push(...ManArray.splice(k-1 ,1));
                    ManArray.push(array[0]);
                    ManArray.splice(0,1);
                    answerList = deleteList + "," + lastList + "," + ManArray
                }
            }
        }
        console.log("answerList>>>",answerList)
        return answerList;
    }

</script>
